class CultivationMap{constructor(elem_name){this.canvas=document.getElementById(elem_name),this.canvas_width=this.canvas.clientWidth,this.canvas_height=this.canvas.clientHeight,this.ctx=this.canvas.getContext("2d"),this.dead_pat=new Image,this.dead_pat.src="./img/pluspat1.png",this.dead_color={},this.dead_area_set=[],this.plant_color={},this.plant_area_set=[],this.direction=new Image,this.direction.src="./img/direction1.png",this.area_w=100,this.area_h=100,this.set_font("12px 'MS P Gothic'"),this.set_direction(null,0,0)}set_size(w,h){this.area_w=w,this.area_h=h}set_margin(margin_str){this.canvas.style.margin=margin_str}set_font(font){this.ctx.font=font,this.font_size=parseInt(font.match(/(\d+)px/)[1])}set_dead_color(dead_name,color){this.dead_color[dead_name]=color}add_dead(dead_name,x,y,w,h){this.dead_area_set.push({dead_name:dead_name,x:x,y:y,w:w,h:h})}set_plant_color(plant_name,color){this.plant_color[plant_name]=color}set_plants(plants){for(let[key,value]of Object.entries(plants.get_colors()))this.plant_color[key]=value}add_plant(plant_name,x,y,w,h){this.plant_area_set.push({plant_name:plant_name,x:x,y:y,w:w,h:h})}draw(){for(let i=0;i<this.dead_area_set.length;i++){const dead=this.dead_area_set[i];this.draw_dead_(dead,this.dead_color[dead.dead_name])}for(let i=0;i<this.plant_area_set.length;i++){const plant=this.plant_area_set[i];this.draw_plant_(plant,this.plant_color[plant.plant_name])}null!=this.ang&&this.draw_direction_(this.ang,this.ang_x,this.ang_y),this.ctx.strokeStyle="black",this.ctx.strokeRect(0,0,this.canvas_width,this.canvas_height)}draw_dead_(area,color){const{x:x,y:y,w:w,h:h}=this.get_rect_(area);this.ctx.fillStyle=color,this.ctx.fillRect(x,y,w,h);const pattern=this.ctx.createPattern(this.dead_pat,"repeat");this.ctx.fillStyle=pattern,this.ctx.fillRect(x,y,w,h)}draw_plant_(plant,color){this.ctx.fillStyle=color;const{x:x,y:y,w:w,h:h}=this.get_rect_(plant);this.ctx.fillRect(x,y,w,h),this.ctx.fillStyle="black";const metrics=this.ctx.measureText(plant.plant_name),padding=2;if(w>metrics.width+2){const ox=x+(w-metrics.width)/2,oy=y+(h+this.font_size)/2;this.ctx.fillText(plant.plant_name,ox,oy)}else{const str=plant.plant_name,mid=Math.floor(str.length/2),str1=str.slice(0,mid),str2=str.slice(mid),met1=this.ctx.measureText(str1),ox=x+(w-met1.width)/2,oy1=y+h/4+this.font_size/2,oy2=y+3*h/4+this.font_size/2;this.ctx.fillText(str1,ox,oy1),this.ctx.fillText(str2,ox,oy2)}}get_rect_(area){const xratio=this.canvas_width/this.area_w,yratio=this.canvas_height/this.area_h,x=area.x*xratio,y=area.y*yratio,w=area.w*xratio,h=area.h*yratio;return{x:x,y:y,w:w,h:h}}set_direction(ang,x,y){this.ang=ang,this.ang_x=x,this.ang_y=y}draw_direction_(ang,x,y){const half=25;this.ctx.save(),this.ctx.translate(25+x,25+y),this.ctx.rotate(ang*Math.PI/180),this.ctx.translate(-25,-25),this.ctx.drawImage(this.direction,0,0),this.ctx.restore()}}